import java.util.*;

class TaxicabNumbers {
    
    private static class Taxicab implements Comparable<Taxicab> {
        int sum;
        int i;
        int j;
        
        public Taxicab(int i, int j) {
            sum = i*i*i + j*j*j;
            this.i = i;
            this.j = j;
        }
        
        public int compareTo(Taxicab that) {
            if (this.sum > that.sum) {
                return 1;
            }
            else if (this.sum < that.sum) {
                return -1;
            }
            else if (this.i > that.i) {
                return 1;
            }
            else if (this.i < that.i) {
                return 1;
            }
            return 0;
        }
        
        public String toString() {
            return i + "^3 + " + j + "^3";
        }
    }
    
    private static void getTaxicab(int n) {
        Queue<Taxicab> pq = new PriorityQueue<>();
        List<Taxicab[]> res = new ArrayList<>();
        
        for (int i = 1; i <= n; i++) {
            pq.add(new Taxicab(i, i));
        }
            
        Taxicab prev = new Taxicab(0, 0);
        while (!pq.isEmpty()) {
            Taxicab curr = pq.remove();
            if (curr.sum == prev.sum) {
                Taxicab[] sol = new Taxicab[] {prev, curr};
                res.add(sol);
            }
            
            if (curr.j < n) {
                pq.add(new Taxicab(curr.i, curr.j + 1));
            }
            prev = curr;
        }
        
        for (Taxicab[] sol : res) {
            Taxicab set1 = sol[0];
            Taxicab set2 = sol[1];
            System.out.println(set1 + " = " + set2);
        }
    }
    
    public static void main(String[] args) {
        getTaxicab(40);
    }
}
