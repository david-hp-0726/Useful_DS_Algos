class Solution {
    public String multiply(String num1, String num2) {
        if (num1.equals("0") || num2.equals("0")) {
            return "0";
        }
        
        List<List<Integer>> digitProducts = new ArrayList<>();
        StringBuilder digits1 = new StringBuilder(num1);
        StringBuilder digits2 = new StringBuilder(num2);
        digits1.reverse();
        digits2.reverse();

        // multiply each digit of num2 with the entirety of num1
        for (int i = 0; i < digits2.length(); i++) {
            digitProducts.add(multiply(digits1, digits2.charAt(i), i));
        }

        // sum up those products
        return add(digitProducts);
    }

    private List<Integer> multiply(StringBuilder num1, char digit2, int numZeros) {
        List<Integer> res = new ArrayList<>();
        for (int i = 0; i < numZeros; i++) {
            res.add(0);
        }

        int leftover = 0;
        for (int i = 0; i < num1.length(); i++) {
            char digit1 = num1.charAt(i);
            int product = (digit1 - '0') * (digit2 - '0') + leftover;
            leftover = product / 10;
            res.add(product % 10);
        }

        if (leftover != 0) {
            res.add(leftover);
        }

        return res;
    }

    private String add(List<List<Integer>> products) {
        List<Integer> res = new ArrayList<>();
        List<Integer> num1 = products.get(products.size() - 1);

        for (int i = 0; i < products.size() - 1; i++) {
            List<Integer> num2 = products.get(i);
            int j = 0, k = 0, leftover = 0;

            while (j < num1.size() && k < num2.size()) {
                int sum = num1.get(j++) + num2.get(k++) + leftover;
                leftover = sum / 10;
                res.add(sum % 10);
            }

            // only one of the following will be executed
            while (j < num1.size()) {
                int sum = num1.get(j++) + leftover;
                leftover = sum / 10;
                res.add(sum % 10);
            }

            while (k < num2.size()) {
                int sum = num2.get(k++) + leftover; 
                leftover = sum / 10;
                res.add(sum % 10);
            }

            if (leftover != 0) {
                res.add(leftover);
            }

            num1 = res;
            res = new ArrayList<>();
        }

        StringBuilder str = new StringBuilder();
        for (int i = num1.size() - 1; i >= 0; i--) {
            str.append((char) (num1.get(i) + '0'));
        }

        return str.toString();
    }
}
